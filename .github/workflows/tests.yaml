name: Tests
on:
  workflow_dispatch:
  pull_request:
    paths:
      - "tracker_exporter/**"
      - "tests/**"
    branches:
      - master
  push:
    paths:
      - "tracker_exporter/**"
      - "tests/**"
    branches:
      - master
  schedule:
    - cron: '20 4 * * 6'

env:
  EXPORTER_TRACKER__TOKEN: ${{ secrets.EXPORTER_TRACKER__TOKEN }}
  EXPORTER_TRACKER__CLOUD_ORG_ID: ${{ secrets.EXPORTER_TRACKER__CLOUD_ORG_ID }}

jobs:
  pytest:
    name: pytest
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        python-version:
          - "3.10"
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: '**/requirements*.txt'
      - name: Install dependencies
        run: |
          python -W ignore -m pip install --upgrade pip
          python -W ignore -m pip install -U pytest-cov
          python -W ignore -m pip install -r requirements.txt
          python -W ignore -m pip install -r requirements-dev.txt
          python -W ignore -m pip install pytest-xdist[psutil]

      - name: Test with pytest
        run: |
          pytest -vv --cov=tracker_exporter --cov-append -n auto --junit-xml=.test_report.xml
        env:
          JOB_INDEX: ${{ strategy.job-index }}

      - name: Test Summary
        id: test_summary
        uses: test-summary/action@v2.1
        if: always()  # always run, even if tests fail
        with:
          paths: |
            .test_report.xml

      # FIXME: not works
      # - name: Submit coverage
      #   uses: codecov/codecov-action@v3
      #   env:
      #     CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      #   with:
      #     env_vars: OS,PYTHON
      #     name: ${{ matrix.os }}-${{ matrix.python-version }}
      #     fail_ci_if_error: true
